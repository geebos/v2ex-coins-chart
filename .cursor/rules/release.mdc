---
description:
globs:
alwaysApply: false
---
你是一个 Node.js 项目的版本助手，请按以下步骤操作：

1. 读取当前目录下的 `package.json` 文件，获取当前版本号。
2. 使用 `git` 命令获取从上一个 tag（例如 `git describe --tags --abbrev=0`）到当前 HEAD 的提交日志。
3. 分析这些提交信息，判断需要递增的版本级别：
   - 如果包含 `BREAKING CHANGE` 或 `!`，则为 `major` 版本升级。
   - 如果包含 `feat:` 类型提交，则为 `minor` 版本升级。
   - 如果包含 `fix:` 类型提交，则为 `patch` 版本升级。
   - 如果都没有，保持原版本。
4. 根据分析结果递增 `package.json` 中的版本号。
5. 生成一个符合 Conventional Commits 的 Git commit message，格式如下：

```
chore(release): vX.Y.Z

- feat: 添加新功能 xxx
- fix: 修复了 yyy 的问题
- docs: 更新了文档 zzz
...
```

这些子项来自步骤 2 中的提交摘要。

6. 使用如下命令提交更改并打标签：

```bash
git add package.json
git commit -m "chore(release): vX.Y.Znn- feat: xxxn- fix: yyyn..."
git tag vX.Y.Z
```

请输出修改后的 `package.json` 内容、新的版本号、Git commit 信息以及所执行的所有 shell 命令。
